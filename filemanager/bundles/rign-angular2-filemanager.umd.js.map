{"version":3,"file":"rign-angular2-filemanager.umd.js.map","sources":["ng://@rign/angular2-filemanager/lib/configuration/fileManagerConfiguration.service.ts","ng://@rign/angular2-filemanager/lib/configuration/IUrlConfiguration.ts","../../node_modules/tslib/tslib.es6.js","ng://@rign/angular2-filemanager/lib/configuration/tree.service.ts","ng://@rign/angular2-filemanager/lib/store/file-manager.action.ts","ng://@rign/angular2-filemanager/lib/crop/crop.component.ts","ng://@rign/angular2-filemanager/lib/dropdown/dropdown.component.ts","ng://@rign/angular2-filemanager/lib/services/imageDataConverter.service.ts","ng://@rign/angular2-filemanager/lib/services/extendedFileUplaoder.service.ts","ng://@rign/angular2-filemanager/lib/services/FilemanagerNotifcations.ts","ng://@rign/angular2-filemanager/lib/filesList/fileManagerUploader.service.ts","ng://@rign/angular2-filemanager/lib/filesList/file/file.component.ts","ng://@rign/angular2-filemanager/lib/store/fileManagerActions.service.ts","ng://@rign/angular2-filemanager/lib/store/file-manager-dispatcher.service.ts","ng://@rign/angular2-filemanager/lib/store/fileManagerApiAbstract.class.ts","ng://@rign/angular2-filemanager/lib/store/fileManagerApi.service.ts","ng://@rign/angular2-filemanager/lib/store/fileManagerEffects.service.ts","ng://@rign/angular2-filemanager/lib/filesList/filesList.component.ts","ng://@rign/angular2-filemanager/lib/preview/preview.component.ts","ng://@rign/angular2-filemanager/lib/services/searchFilter.service.ts","ng://@rign/angular2-filemanager/lib/services/fileTypeFilter.service.ts","ng://@rign/angular2-filemanager/lib/filesList/file.model.ts","ng://@rign/angular2-filemanager/lib/store/file-manager.reducer.ts","ng://@rign/angular2-filemanager/lib/services/currentDirectoryFiles.service.ts","ng://@rign/angular2-filemanager/lib/store/fileManagerBackendApi.service.ts","ng://@rign/angular2-filemanager/lib/toolbar/fileTypeFilter/fileTypeFilter.component.ts","ng://@rign/angular2-filemanager/lib/toolbar/interface/IUploadItemEvent.ts","ng://@rign/angular2-filemanager/lib/toolbar/models/button.model.ts","ng://@rign/angular2-filemanager/lib/toolbar/models/toolbarEvent.model.ts","ng://@rign/angular2-filemanager/lib/toolbar/searchFile/searchFile.component.ts","ng://@rign/angular2-filemanager/lib/dropdown/AbstractButton.class.ts","ng://@rign/angular2-filemanager/lib/dropdown/Button.class.ts","ng://@rign/angular2-filemanager/lib/dropdown/ButtonDivider.class.ts","ng://@rign/angular2-filemanager/lib/toolbar/selectionDropDown/selection.component.ts","ng://@rign/angular2-filemanager/lib/toolbar/toolbar.component.ts","ng://@rign/angular2-filemanager/lib/filemanager.component.ts","ng://@rign/angular2-filemanager/lib/filemanager.module.ts"],"sourcesContent":["import {IContextMenu} from '@rign/angular2-tree';\nimport {Injectable, Inject} from '@angular/core';\nimport {IFileTypeFilter} from '../toolbar/interface/IFileTypeFilter';\nimport {ICropSize} from '../crop/ICropSize';\nimport {IFileManagerConfiguration} from './IFileManagerConfiguration';\n\n@Injectable()\nexport class FileManagerConfiguration {\n\n  public allowedCropSize: ICropSize[] = [\n    {\n      name: 'RI_FM_BTN_LANDSCAPE',\n      width: 300,\n      height: 100\n    },\n    {\n      name: 'RI_FM_BTN_PORTRAIT',\n      width: 200,\n      height: 300\n    }\n  ];\n\n  public contextMenuItems: IContextMenu[] = [];\n\n  public fileTypesFilter: IFileTypeFilter[] = [\n    {\n      name: 'ALL',\n      mimes: [],\n      iconCls: 'fa fa-file-o',\n      text: 'All files',\n      defaultSelected: true\n    },\n    {\n      name: 'IMAGES',\n      mimes: ['image/jpg', 'image/jpeg', 'image/png', 'image/gif', 'image/png'],\n      iconCls: 'fa fa-picture-o',\n      text: 'Images'\n    },\n    {\n      name: 'AUDIO',\n      mimes: ['audio/mpeg', 'audio/x-ms-wma', 'audio/vnd.rn-realaudio', 'audio/x-wav', 'audio/mp3'],\n      iconCls: 'fa fa-file-audio-o',\n      text: 'Audio'\n    },\n    {\n      name: 'VIDEO',\n      mimes: ['video/mpeg', 'video/mp4', 'video/quicktime', 'video/x-ms-wmv'],\n      iconCls: 'fa fa-file-video-o',\n      text: 'Video'\n    },\n    {\n      name: 'ARCHIVE',\n      mimes: ['application/zip'],\n      iconCls: 'fa fa-file-archive-o',\n      text: 'Archive'\n    }\n  ];\n\n  public folderUrls: {foldersUrl: string, folderMoveUrl: string};\n  public fileUrl = '/api/files';\n\n  public isMultiSelection: boolean;\n\n  public maxFileSize: number;\n\n  public mimeTypes: string[] | null;\n\n  public allowChooseMultipleFiles: boolean;\n\n  constructor(@Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration) {\n    const {foldersUrl, folderMoveUrl} = configuration.urls;\n    this.folderUrls = {foldersUrl, folderMoveUrl};\n    this.fileUrl = configuration.urls.filesUrl;\n    this.isMultiSelection = configuration.isMultiSelection || false;\n    this.maxFileSize = configuration.maxFileSize || 0;\n    this.mimeTypes = configuration.mimeTypes || null;\n    this.allowChooseMultipleFiles = configuration.allowChooseMultipleFiles || false;\n  }\n}\n","export class IUrlConfiguration {\n  filesUrl: string | null;\n  foldersUrl: string;\n  folderMoveUrl: string;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Injectable, Inject} from '@angular/core';\nimport {NodeService} from '@rign/angular2-tree';\nimport {IFileManagerConfiguration} from './IFileManagerConfiguration';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class TreeService extends NodeService {\n  public constructor(protected http: HttpClient, @Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration) {\n    super(http);\n\n    this.apiConfig = {\n      addUrl: configuration.urls.foldersUrl,\n      getUrl: configuration.urls.foldersUrl,\n      updateUrl: configuration.urls.foldersUrl,\n      removeUrl: configuration.urls.foldersUrl,\n      moveUrl: configuration.urls.folderMoveUrl\n    };\n  }\n}\n","import {Action} from '@ngrx/store';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {ICropBounds} from '../crop/ICropBounds';\nimport {IFileModel} from '../filesList/interface/IFileModel';\n\nexport enum FileManagerActionTypes {\n  CHOOSE_FILES = 'FILEMANAGER_CHOOSE_FILES',\n  CROP_FILE = 'FILEMANAGER_CROP_FILE',\n  CROP_FILE_SUCCESS = 'FILEMANAGER_CROP_FILE_SUCCESS',\n  CROP_FILE_ERROR = 'FILEMANAGER_CROP_FILE_ERROR',\n  DELETE_FILE = 'FILEMANAGER_DELETE_FILE',\n  DELETE_FILE_SUCCESS = 'FILEMANAGER_DELETE_FILE_SUCCESS',\n  DELETE_FILE_SELECTION = 'FILEMANAGER_DELETE_FILE_SELECTION',\n  DELETE_FILE_SELECTION_SUCCESS = 'FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS',\n  INVERSE_FILE_SELECTION = 'FILEMANAGER_INVERSE_FILE_SELECTION',\n  LOAD_FILES = 'FILEMANAGER_LOAD_FILES',\n  LOAD_FILES_SUCCESS = 'FILEMANAGER_LOAD_FILES_SUCCESS',\n  MOVE_FILES_SUCCESS = 'FILEMANAGER_MOVE_FILES_SUCCESS',\n  MOVE_FILES_ERROR = 'FILEMANAGER_MOVE_FILES_ERROR',\n  SELECT_ALL = 'FILEMANAGER_SELECT_ALL',\n  SELECT_FILE = 'FILEMANAGER_SELECT_FILE',\n  UNSELECT_FILE = 'FILEMANAGER_UNSELECT_FILE',\n  UNSELECT_ALL = 'FILEMANAGER_UNSELECT_ALL',\n  UPLOAD_FILE = 'FILEMANAGER_UPLOAD_FILE',\n  UPLOAD_FILE_ERROR = 'FILEMANAGER_UPLOAD_FILE_ERROR',\n  UPLOAD_FILE_SUCCESS = 'FILEMANAGER_UPLOAD_FILE_SUCCESS',\n}\n\nexport class ChooseFilesAction implements Action {\n  readonly type = FileManagerActionTypes.CHOOSE_FILES;\n\n  public constructor(public payload: { files: IOuterFile[] }) {\n\n  }\n}\n\nexport class CropFileAction implements Action {\n  readonly type = FileManagerActionTypes.CROP_FILE;\n\n  public constructor(public payload: { file: IFileModel, bounds: ICropBounds }) {\n\n  }\n}\n\nexport class CropFileErrorAction implements Action {\n  readonly type = FileManagerActionTypes.CROP_FILE_ERROR;\n\n  public constructor(public payload: { file: IFileModel}) {\n\n  }\n}\n\nexport class CropFileSuccessAction implements Action {\n  readonly type = FileManagerActionTypes.CROP_FILE_SUCCESS;\n\n  public constructor(public payload: { file: IFileModel}) {\n\n  }\n}\n\nexport class DeleteFileAction implements Action {\n  readonly type = FileManagerActionTypes.DELETE_FILE;\n\n  public constructor(public payload: { file: IFileModel}) {\n\n  }\n}\n\nexport class DeleteFileSuccessAction implements Action {\n  readonly type = FileManagerActionTypes.DELETE_FILE_SUCCESS;\n\n  public constructor(public payload: { file: IFileModel}) {\n\n  }\n}\n\nexport class DeleteSelectedFilesAction implements Action {\n  readonly type = FileManagerActionTypes.DELETE_FILE_SELECTION;\n\n  public constructor(public payload: { files: string[]}) {\n\n  }\n}\n\nexport class DeleteSelectedFilesSuccessAction implements Action {\n  readonly type = FileManagerActionTypes.DELETE_FILE_SELECTION_SUCCESS;\n\n  public constructor(public payload: { files: string[]}) {\n\n  }\n}\n\nexport class InverseFilesSelectionAction implements Action {\n  readonly type = FileManagerActionTypes.INVERSE_FILE_SELECTION;\n\n}\n\nexport class LoadFilesAction implements Action {\n  readonly type = FileManagerActionTypes.LOAD_FILES;\n\n  public constructor(public payload: { folderId: string}) {\n\n  }\n}\n\nexport class LoadFilesSuccessAction implements Action {\n  readonly type = FileManagerActionTypes.LOAD_FILES_SUCCESS;\n\n  public constructor(public payload: { files: IOuterFile[]}) {\n\n  }\n}\n\nexport class MoveFilesErrorAction implements Action {\n  readonly type = FileManagerActionTypes.MOVE_FILES_ERROR;\n\n  public constructor(public payload: { files: IOuterFile[]}) {\n\n  }\n}\n\nexport class MoveFilesSuccessAction implements Action {\n  readonly type = FileManagerActionTypes.MOVE_FILES_SUCCESS;\n\n  public constructor(public payload: { folderId: string, files: IOuterFile[]}) {\n\n  }\n}\n\nexport class SelectAllFilesAction implements Action {\n  readonly type = FileManagerActionTypes.SELECT_ALL;\n}\n\nexport class SelectFileAction implements Action {\n  readonly type = FileManagerActionTypes.SELECT_FILE;\n\n  public constructor(public payload: { file: IFileModel}) {\n\n  }\n}\n\nexport class UnSelectAllFilesAction implements Action {\n  readonly type = FileManagerActionTypes.UNSELECT_ALL;\n}\n\nexport class UnSelectFileAction implements Action {\n  readonly type = FileManagerActionTypes.UNSELECT_FILE;\n\n  public constructor(public payload: { file: IFileModel}) {\n\n  }\n}\n\nexport class UploadFilesAction implements Action {\n  readonly type = FileManagerActionTypes.UPLOAD_FILE;\n\n  public constructor(public payload: { files: IOuterFile[]}) {\n\n  }\n}\n\nexport class UploadFilesErrorAction implements Action {\n  readonly type = FileManagerActionTypes.UPLOAD_FILE_ERROR;\n\n  public constructor(public payload: { files: IOuterFile[]}) {\n\n  }\n}\n\nexport class UploadFilesSuccessAction implements Action {\n  readonly type = FileManagerActionTypes.UPLOAD_FILE_SUCCESS;\n\n  public constructor(public payload: { files: IOuterFile[]}) {\n\n  }\n}\n\nexport type FileManagerAction =\n  ChooseFilesAction\n  | CropFileAction\n  | CropFileErrorAction\n  | CropFileSuccessAction\n  | DeleteFileAction\n  | DeleteFileSuccessAction\n  | DeleteSelectedFilesAction\n  | DeleteSelectedFilesSuccessAction\n  | InverseFilesSelectionAction\n  | LoadFilesAction\n  | LoadFilesSuccessAction\n  | MoveFilesErrorAction\n  | MoveFilesSuccessAction\n  | SelectAllFilesAction\n  | SelectFileAction\n  | UnSelectAllFilesAction\n  | UnSelectFileAction\n  | UploadFilesAction\n  | UploadFilesErrorAction\n  | UploadFilesSuccessAction\n;\n","import {\n  Component, Input, ViewChild, ViewContainerRef, ComponentFactoryResolver, Output,\n  EventEmitter, AfterContentInit\n} from '@angular/core';\nimport {FileModel} from '../filesList/file.model';\nimport {CropperSettings} from 'ng2-img-cropper/src/cropperSettings';\nimport {ICropSize} from './ICropSize';\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\nimport {Bounds} from 'ng2-img-cropper/src/model/bounds';\nimport {ICropBounds} from './ICropBounds';\nimport {ImageCropperComponent} from 'ng2-img-cropper';\nimport {IFileManagerState} from '../store/file-manager.reducer';\nimport {Store} from '@ngrx/store';\nimport {CropFileAction} from '../store/file-manager.action';\n\n@Component({\n  selector: 'crop-image',\n  styleUrls: ['./crop.scss'],\n  template: `\n    <div class=\"crop-image\">\n      <div class=\"crop-workbench\">\n        <div #container></div>\n      </div>\n      <div class=\"btn-toolbar\">\n        <div class=\"btn-group\">\n          <button class=\"btn btn-primary\" *ngFor=\"let cropSize of cropSizeList\" (click)=\"updateCropSize(cropSize)\"\n                  [ngClass]=\"{'active': cropSize == currentCropSize}\">{{cropSize.name | translate}}\n          </button>\n        </div>\n        <div class=\"btn-group pull-right\">\n          <button class=\"btn btn-success btn-icon\" (click)=\"cropImage()\">\n            <i class=\"fa fa-check\"></i>\n            <span>{{'RI_FM_BTN_SAVE' | translate}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  `\n})\n\nexport class CropComponent implements AfterContentInit {\n  @Input()\n  public file: FileModel;\n\n  @Output()\n  public onCrop = new EventEmitter();\n\n  @ViewChild('container', {read: ViewContainerRef})\n  public container: ViewContainerRef;\n\n  @ViewChild('cropper')\n  public cropper: ImageCropperComponent;\n\n  private bounds: Bounds;\n\n  public cropSizeList: ICropSize[];\n  public currentCropSize: ICropSize;\n\n  constructor(private resolver: ComponentFactoryResolver,\n              private configuration: FileManagerConfiguration,\n              private store: Store<IFileManagerState>) {\n    this.cropSizeList = configuration.allowedCropSize;\n  }\n\n  updateCropSize(cropSize: ICropSize) {\n    const image = new Image();\n    const cropperComponent = this.resolver.resolveComponentFactory(ImageCropperComponent);\n    const cropperComponentRef = this.container.createComponent(cropperComponent);\n\n    if (this.container.length > 1) {\n      this.container.detach(0);\n    }\n\n    this.currentCropSize = cropSize;\n    cropperComponentRef.instance.settings = this.getCropperSettings();\n    cropperComponentRef.instance.image = {};\n    cropperComponentRef.instance.onCrop\n      .subscribe((bounds: Bounds) => this.bounds = bounds);\n\n    setTimeout(() => {\n      image.src = this.file.url;\n      cropperComponentRef.instance.setImage(image);\n    });\n  }\n\n  public ngAfterContentInit(): void {\n    this.updateCropSize(this.cropSizeList[0]);\n  }\n\n  public cropImage() {\n    const bounds: ICropBounds = {\n      x: this.bounds.left,\n      y: this.bounds.top,\n      width: this.bounds.width,\n      height: this.bounds.height\n    };\n\n    this.store.dispatch(new CropFileAction({file: this.file, bounds}));\n  }\n\n\n  private getCropperSettings(): CropperSettings {\n    const cropperSettings = new CropperSettings();\n    const scale = this.calculateScale();\n    const width = scale * this.file.getWidth();\n    const height = scale * this.file.getHeight();\n\n    cropperSettings.noFileInput = true;\n    cropperSettings.width = this.currentCropSize.width;\n    cropperSettings.height = this.currentCropSize.height;\n    cropperSettings.canvasWidth = width;\n    cropperSettings.canvasHeight = height;\n\n    return cropperSettings;\n  }\n\n  /**\n   * Calculates scale between current file dimensions and box 600x600\n   */\n  private calculateScale(): number {\n    const scale = this.file.getWidth() / this.file.getHeight();\n\n    if (scale > 1) {\n      if (this.file.getWidth() > 600) {\n        return 600 / this.file.getWidth();\n      }\n    } else {\n      if (this.file.getHeight() > 600) {\n        return 600 / this.file.getHeight();\n      }\n    }\n\n    return 1;\n  }\n}\n","import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {IButtonData} from './IButton';\n\n@Component({\n  selector: 'ri-dropdown',\n  styleUrls: ['./dropdown.scss'],\n  templateUrl: './dropdown.html'\n})\n\nexport class DropdownComponent {\n  @Input()\n  public mainButton: IButtonData;\n\n  @Input()\n  public buttons: IButtonData[];\n\n  @Input()\n  public displayMainButtonLabel: boolean;\n\n  @Output()\n  public onClick = new EventEmitter();\n\n  public isOpen = false;\n\n  public hide(): void {\n    this.isOpen = false;\n  }\n\n  public selectButton(button: IButtonData): void {\n    this.hide();\n    this.onClick.emit(button);\n  }\n\n  public toggleOpen() {\n    this.isOpen = !this.isOpen;\n  }\n}\n","import {UUID} from 'angular2-uuid';\nimport {Injectable} from '@angular/core';\nimport {concatMap, map} from 'rxjs/operators';\nimport {fromEvent, Observable, of} from 'rxjs';\n\nexport interface IFileDataProperties {\n  id: string | number;\n  folderId: string;\n  name: string;\n  size: number;\n  data: string;\n  type: string;\n  width?: number;\n  height?: number;\n  selected?: boolean;\n}\n\nexport interface IImageDimensions {\n  width: number;\n  height: number;\n}\n\n@Injectable()\nexport class ImageDataConverter {\n  public getProperties(file: File, folderId: string): Observable<IFileDataProperties> {\n    const properties: IFileDataProperties = {\n      id: UUID.UUID(),\n      folderId: folderId,\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      data: ''\n    };\n\n    const reader = this.getBase64FromFile(file);\n\n    return reader\n      .pipe(\n        concatMap((data: string) => {\n          properties.data = data;\n\n          if (properties.type.indexOf('image') === 0) {\n            return this.getImageDimensions(data);\n          } else {\n            return of({width: 0, height: 0});\n          }\n        }),\n        map((dimensions: IImageDimensions) => {\n          properties.width = dimensions.width;\n          properties.height = dimensions.height;\n\n          return properties;\n        })\n      );\n  }\n\n  /**\n   * Create observable which return image as base64 data\n   */\n  private getBase64FromFile(file: File): Observable<string> {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n\n    return fromEvent(reader, 'load')\n      .pipe(\n        map(() => {\n          return reader.result.toString();\n        })\n      );\n  }\n\n  /**\n   * Create observable which return dimensions of the image\n   */\n  private getImageDimensions(data: string): Observable<IImageDimensions> {\n    const image = new Image();\n    image.src = data;\n    image.style.display = 'none';\n\n    const loadImage = fromEvent(image, 'load')\n      .pipe(\n        map(() => {\n          return {\n            width: image.naturalWidth,\n            height: image.naturalHeight\n          };\n        })\n      );\n\n    document.body.appendChild(image);\n\n    return loadImage;\n  }\n}\n","import {FileItem, FileUploader, FileUploaderOptions} from 'ng2-file-upload';\nimport {IFileDataProperties, ImageDataConverter} from './imageDataConverter.service';\nimport {FilemanagerNotifcations, INotification} from './FilemanagerNotifcations';\nimport {FileLikeObject} from 'ng2-file-upload/file-upload/file-like-object.class';\n\nexport class ExtendedFileUploader extends FileUploader {\n\n  public constructor(options: FileUploaderOptions, private filemanagerNotification: FilemanagerNotifcations) {\n    super(options);\n  }\n\n  public onWhenAddingFileFailed(item: FileLikeObject, filter: any, options: FileUploaderOptions) {\n    const notification: INotification = {\n      type: 'alert',\n      title: 'Add file to queue',\n      message: `File not add to queue`\n    };\n\n    if (filter.name === 'fileSize') {\n      notification.message = `File size is too large - max size  is ${options.maxFileSize / 1024} KB`;\n    } else {\n      notification.message = `File mime type \"${item.type}\" is not allowed`;\n    }\n    this.filemanagerNotification.sendNotification(notification);\n  }\n\n  public uploadItem(value: FileItem): void {\n    if (this.options.url) {\n      super.uploadItem(value);\n    } else {\n      const imageDataConverter = new ImageDataConverter();\n      this._onProgressItem(value, 0);\n\n      if (this.isUploading) {\n        return;\n      }\n\n      this.isUploading = true;\n\n      const header = this.options.headers.find((object: any) => object.name === 'folderId');\n\n      this._onProgressItem(value, 50);\n      imageDataConverter.getProperties(value._file, header.value)\n        .subscribe((file: IFileDataProperties) => {\n          this.isUploading = false;\n\n          this._onProgressItem(value, 100);\n          this._onCompleteItem(value, JSON.stringify(file), 200, {});\n        });\n    }\n  }\n}\n","import {Subject} from 'rxjs';\n\nexport interface INotification {\n  type: 'alert' | 'error' | 'success';\n  title: string;\n  message?: string;\n}\n\nexport class FilemanagerNotifcations {\n  private notification$ = new Subject<INotification>();\n\n  public sendNotification(notification: INotification): void {\n    this.notification$.next(notification);\n  }\n\n  public getNotificationStream(): Subject<INotification> {\n    return this.notification$;\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {ExtendedFileUploader} from '../services/extendedFileUplaoder.service';\nimport {IFileManagerConfiguration} from '../configuration/IFileManagerConfiguration';\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\nimport {FileUploaderOptions} from 'ng2-file-upload';\n\n@Injectable()\nexport class FileManagerUploader {\n  public uploader: ExtendedFileUploader;\n\n  public constructor(@Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration,\n                     filemanagerNotification: FilemanagerNotifcations) {\n    const options: FileUploaderOptions = {\n      allowedMimeType: configuration.mimeTypes,\n      url: configuration.urls.filesUrl,\n      maxFileSize: configuration.maxFileSize\n    };\n\n    this.uploader = new ExtendedFileUploader(options, filemanagerNotification);\n  }\n\n  public clear() {\n    this.uploader.authToken = null;\n    this.uploader.setOptions(this.getDefaultOptions());\n  }\n\n  public getDefaultOptions() {\n    const options = {};\n    options['removeAfterUpload'] = true;\n    options['autoUpload'] = true;\n    options['method'] = 'POST';\n\n    return options;\n  }\n\n  public setAuthorizationToken(token: string) {\n    this.uploader.authToken = token;\n  }\n\n  public setDirectoryId(directoryId: string | number): FileManagerUploader {\n    const options = this.getDefaultOptions();\n\n    options['headers'] = [{name: 'folderId', value: directoryId.toString()}];\n\n    this.uploader.setOptions(options);\n\n    return this;\n  }\n}\n","import {Component, EventEmitter, Input, Output, ViewEncapsulation} from '@angular/core';\nimport {IFileModel} from '../interface/IFileModel';\nimport {FileManagerConfiguration} from '../../configuration/fileManagerConfiguration.service';\nimport {IFileEvent} from '../interface/IFileEvent';\nimport {Store} from '@ngrx/store';\nimport {IFileManagerState} from '../../store/file-manager.reducer';\nimport {\n  ChooseFilesAction,\n  DeleteFileAction,\n  SelectFileAction,\n  UnSelectFileAction\n} from '../../store/file-manager.action';\n\n@Component({\n  selector: 'ri-file-component',\n  templateUrl: './file.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class FileComponent {\n  @Input()\n  public file: IFileModel;\n\n  @Output()\n  public onPreviewFile = new EventEmitter();\n\n  @Output()\n  public onCropFile = new EventEmitter();\n\n  @Output()\n  public onSelectFile = new EventEmitter();\n\n  public removeTitle = 'Remove file';\n\n  public constructor(public configuration: FileManagerConfiguration,\n                     private store: Store<IFileManagerState>) {\n  }\n\n  /**\n   * Fired when clicked on button \"delete file\"\n   *\n   * @param file\n   */\n  public deleteFile($event: MouseEvent, file: IFileModel) {\n    this.store.dispatch(new DeleteFileAction({file}));\n\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n\n  public getRemoveMessage(file: IFileModel) {\n    return 'You are try to delete <b>' + file.name + '</b>. Are you sure?';\n  }\n\n  public openPreview($event: MouseEvent): void {\n    let fileEvent: IFileEvent = {\n      eventName: 'onPreviewFile',\n      file: this.file\n    };\n    this.onPreviewFile.emit(fileEvent);\n\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n\n  public openCrop($event: MouseEvent): void {\n    let fileEvent: IFileEvent = {\n      eventName: 'onCropFile',\n      file: this.file\n    };\n    this.onCropFile.emit(fileEvent);\n\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n\n  public selectFile(): void {\n    this.store.dispatch(new SelectFileAction({file: this.file}));\n  }\n\n  public unSelectFile(): void {\n    this.store.dispatch(new UnSelectFileAction({file: this.file}));\n  }\n\n  public chooseFile($event: MouseEvent, file: IFileModel): void {\n    this.store.dispatch(new ChooseFilesAction({files: [file.toJSON()]}));\n\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Action} from '@ngrx/store';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {IFileModel} from '../filesList/interface/IFileModel';\nimport {ICropBounds} from '../crop/ICropBounds';\n\nexport interface IFileManagerPayloadData {\n  folderId?: string;\n  files?: IOuterFile[];\n  file?: IFileModel;\n  fileIds?: string[];\n  bounds?: ICropBounds;\n}\n\nexport interface IFileManagerAction extends Action {\n  payload: IFileManagerPayloadData;\n}\n\n/**\n * @Deprecated - Will be removed in 3.0.0\n */\n@Injectable()\nexport class FileManagerActionsService {\n  static FILEMANAGER_CHOOSE_FILES = 'FILEMANAGER_CHOOSE_FILES';\n  static FILEMANAGER_CROP_FILE = 'FILEMANAGER_CROP_FILE';\n  static FILEMANAGER_CROP_FILE_SUCCESS = 'FILEMANAGER_CROP_FILE_SUCCESS';\n  static FILEMANAGER_CROP_FILE_ERROR = 'FILEMANAGER_CROP_FILE_ERROR';\n  static FILEMANAGER_DELETE_FILE = 'FILEMANAGER_DELETE_FILE';\n  static FILEMANAGER_DELETE_FILE_SUCCESS = 'FILEMANAGER_DELETE_FILE_SUCCESS';\n  static FILEMANAGER_DELETE_FILE_SELECTION = 'FILEMANAGER_DELETE_FILE_SELECTION';\n  static FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS = 'FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS';\n  static FILEMANAGER_INVERSE_FILE_SELECTION = 'FILEMANAGER_INVERSE_FILE_SELECTION';\n  static FILEMANAGER_LOAD_FILES = 'FILEMANAGER_LOAD_FILES';\n  static FILEMANAGER_LOAD_FILES_SUCCESS = 'FILEMANAGER_LOAD_FILES_SUCCESS';\n  static FILEMANAGER_MOVE_FILES_SUCCESS = 'FILEMANAGER_MOVE_FILES_SUCCESS';\n  static FILEMANAGER_MOVE_FILES_ERROR = 'FILEMANAGER_MOVE_FILES_ERROR';\n  static FILEMANAGER_SELECT_ALL = 'FILEMANAGER_SELECT_ALL';\n  static FILEMANAGER_SELECT_FILE = 'FILEMANAGER_SELECT_FILE';\n  static FILEMANAGER_UNSELECT_FILE = 'FILEMANAGER_UNSELECT_FILE';\n  static FILEMANAGER_UNSELECT_ALL = 'FILEMANAGER_UNSELECT_ALL';\n  static FILEMANAGER_UPLOAD_FILE = 'FILEMANAGER_UPLOAD_FILE';\n  static FILEMANAGER_UPLOAD_FILE_ERROR = 'FILEMANAGER_UPLOAD_FILE_ERROR';\n  static FILEMANAGER_UPLOAD_FILE_SUCCESS = 'FILEMANAGER_UPLOAD_FILE_SUCCESS';\n\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new ChooseFilesAction() instead of it\n   */\n  public chooseFiles(files: IOuterFile[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_CHOOSE_FILES,\n      payload: {files}\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new CropFileAction() instead of it\n   */\n  public cropFile(file: IFileModel, bounds: ICropBounds): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE,\n      payload: {\n        file: file,\n        bounds: bounds\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new CropFileSuccessAction() instead of it\n   */\n  public cropFileSuccess(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE_SUCCESS,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new CropFileErrorAction() instead of it\n   */\n  public cropFileError(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE_ERROR,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new DeleteFileAction() instead of it\n   */\n  public deleteFile(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new DeleteFileSuccessAction() instead of it\n   */\n  public deleteFileSuccess(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SUCCESS,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new DeleteSelectedFilesAction() instead of it\n   */\n  public deleteSelectedFiles(fileIds: string[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION,\n      payload: {fileIds}\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new DeleteSelectedFilesSuccessAction() instead of it\n   */\n  public deleteSelectedFilesSuccess(files: IOuterFile[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS,\n      payload: {files}\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new LoadFilesAction() instead of it\n   */\n  public loadFiles(folderId: string): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_LOAD_FILES,\n      payload: {\n        folderId: folderId\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new InverseFilesSelectionAction() instead of it\n   */\n  public inverseFileSelection(): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_INVERSE_FILE_SELECTION,\n      payload: {}\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new LoadFilesSuccessAction() instead of it\n   */\n  public loadFilesSuccess(folderId: string, files: IOuterFile[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_LOAD_FILES_SUCCESS,\n      payload: {\n        folderId: folderId,\n        files: files\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new MoveFilesSuccessAction() instead of it\n   */\n  public moveFileSuccess(files: IOuterFile[], folderId: string) {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_MOVE_FILES_SUCCESS,\n      payload: {folderId, files}\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new MoveFilesErrorAction() instead of it\n   */\n  public moveFileError(files: IOuterFile[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_MOVE_FILES_ERROR,\n      payload: {files}\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new SelectAllFilesAction() instead of it\n   */\n  public selectAllFiles(): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_SELECT_ALL,\n      payload: {}\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new SelectFileAction() instead of it\n   */\n  public selectFile(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_SELECT_FILE,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new UnSelectAllFilesAction() instead of it\n   */\n  public unSelectAll(): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UNSELECT_ALL,\n      payload: {}\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new UnSelectFileAction() instead of it\n   */\n  public unSelectFile(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UNSELECT_FILE,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new UploadFilesAction() instead of it\n   */\n  public upload(file: IOuterFile): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE,\n      payload: {\n        files: [file]\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new UploadFilesSuccessAction() instead of it\n   */\n  public uploadSuccess(file: IOuterFile): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_SUCCESS,\n      payload: {\n        files: [file]\n      }\n    };\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, use new UploadFilesErrorAction() instead of it\n   */\n  public uploadError(file: IOuterFile): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_ERROR,\n      payload: {\n        files: [file]\n      }\n    };\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {IFileManagerState} from './file-manager.reducer';\nimport {FileManagerActionsService} from './fileManagerActions.service';\nimport {IFileModel} from '../filesList/interface/IFileModel';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {ICropBounds} from '../crop/ICropBounds';\nimport {\n  ChooseFilesAction,\n  CropFileAction,\n  DeleteFileAction,\n  DeleteSelectedFilesAction,\n  InverseFilesSelectionAction,\n  LoadFilesAction,\n  SelectAllFilesAction,\n  SelectFileAction,\n  UnSelectAllFilesAction,\n  UnSelectFileAction, UploadFilesAction, UploadFilesErrorAction, UploadFilesSuccessAction\n} from './file-manager.action';\n\n/**\n * @Deprecated - Will be removed in 3.0.0\n */\n@Injectable()\nexport class FileManagerDispatcherService {\n\n  constructor(private store: Store<IFileManagerState>, private fileManagerActions: FileManagerActionsService) {\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch ChooseFilesAction instead of it\n   */\n  public chooseFiles(files: IOuterFile[]): void {\n    this.store.dispatch(new ChooseFilesAction({files}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch CropFileAction instead of it\n   */\n  public cropFile(file: IFileModel, bounds: ICropBounds): void {\n    this.store.dispatch(new CropFileAction({bounds, file}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch DeleteFileAction instead of it\n   */\n  public deleteFile(file: IFileModel): void {\n    this.store.dispatch(new DeleteFileAction({file}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch DeleteSelectedFilesAction instead of it\n   */\n  public deleteSelectedFiles(files: string[]): void {\n    this.store.dispatch(new DeleteSelectedFilesAction({files}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch InverseFilesSelectionAction instead of it\n   */\n  public inverseSelection(): void {\n    this.store.dispatch(new InverseFilesSelectionAction());\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch LoadFilesAction instead of it\n   */\n  public loadFiles(folderId: string | null): void {\n    this.store.dispatch(new LoadFilesAction({folderId}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch SelectAllFilesAction instead of it\n   */\n  public selectAllFiles(): void {\n    this.store.dispatch(new SelectAllFilesAction());\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch SelectFileAction instead of it\n   */\n  public selectFile(file: IFileModel): void {\n    this.store.dispatch(new SelectFileAction({file}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch UnSelectAllFilesAction instead of it\n   */\n  public unSelectAllFiles(): void {\n    this.store.dispatch(new UnSelectAllFilesAction());\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch UnSelectFileAction instead of it\n   */\n  public unSelectFile(file: IFileModel): void {\n    this.store.dispatch(new UnSelectFileAction({file}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch UploadFilesErrorAction instead of it\n   */\n  public uploadError(file: IOuterFile) {\n    this.store.dispatch(new UploadFilesErrorAction({files: [file]}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch UploadFilesAction instead of it\n   */\n  public upload(file: IOuterFile) {\n    this.store.dispatch(new UploadFilesAction({files: [file]}));\n  }\n\n  /**\n   * @Deprecated - Will be removed in 3.0.0, dispatch UploadFilesSuccessAction instead of it\n   */\n  public uploadSuccess(file: IOuterFile) {\n    this.store.dispatch(new UploadFilesSuccessAction({files: [file]}));\n  }\n}\n","import {IOuterNode} from '@rign/angular2-tree';\nimport {IFileDataProperties} from '../services/imageDataConverter.service';\n\nexport const FILEMANAGER_TREE_NAME = 'fileManagerTree';\n\nexport abstract class AbstractFileManagerApiService {\n\n  protected treeName = FILEMANAGER_TREE_NAME;\n  protected fileManagerName = 'fileManagerFiles';\n\n\n  protected nodes: IOuterNode[];\n  protected files: IFileDataProperties[];\n\n  protected currentNodeId = '';\n}\n","import {Injectable} from '@angular/core';\nimport {IOuterNode, INodeService} from '@rign/angular2-tree';\nimport {UUID} from 'angular2-uuid';\nimport {IFileManagerApi} from './IFileManagerApi';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {IFileDataProperties} from '../services/imageDataConverter.service';\nimport {ICropBounds} from '../crop/ICropBounds';\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\nimport {AbstractFileManagerApiService, FILEMANAGER_TREE_NAME} from './fileManagerApiAbstract.class';\nimport {empty, Observable, of, throwError} from 'rxjs';\n\n@Injectable()\nexport class FileManagerApiService extends AbstractFileManagerApiService implements IFileManagerApi, INodeService {\n\n  public constructor(private filemanagerNotfication: FilemanagerNotifcations) {\n    super();\n  }\n\n  public get treeId(): string {\n    return FILEMANAGER_TREE_NAME;\n  }\n\n  public load(nodeId = ''): Observable<IOuterNode[]> {\n    if (!this.nodes) {\n      this.nodes = this.getAllDataFromLocalStorage();\n    }\n\n    const nodes = this.getChildren(nodeId);\n\n    return of(nodes);\n  }\n\n  public add(node: IOuterNode, parentNodeId: string = null): Observable<IOuterNode> {\n    node.parentId = parentNodeId;\n    node.id = UUID.UUID();\n\n    this.nodes.push(node);\n\n    if (this.saveNodes()) {\n      return of(node);\n    } else {\n      return empty();\n    }\n\n  }\n\n  public move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode> {\n    const srcId = srcNode.id;\n    const targetId = targetNode ? targetNode.id : '';\n\n    const index = this.findIndexByNodeId(srcId);\n\n    this.nodes[index].parentId = targetId;\n\n    if (this.saveNodes()) {\n      return of(this.nodes[index]);\n    } else {\n      return empty();\n    }\n\n  }\n\n  public update(node: IOuterNode): Observable<IOuterNode> {\n    const index = this.findIndexByNodeId(node.id);\n\n    this.nodes[index] = node;\n\n    if (this.saveNodes()) {\n      return of(node);\n    } else {\n      return empty();\n    }\n  }\n\n  public remove(nodeId: string): Observable<IOuterNode> {\n    const index = this.findIndexByNodeId(nodeId);\n    const node = this.nodes[index];\n\n    const hasChildren = this.getChildren(nodeId).length > 0;\n\n    if (!hasChildren) {\n      this.nodes.splice(index, 1);\n\n      this.saveNodes();\n\n      return of(node);\n    } else {\n      return throwError('Node is not empty');\n    }\n  }\n\n  public setAllNodes(nodes: IOuterNode[]): void {\n    this.nodes = [...nodes];\n\n    this.saveNodes();\n  }\n\n  /**\n   * Crop file\n   */\n  public cropFile(file: IOuterFile, bounds: ICropBounds): Observable<IOuterFile> {\n    return throwError('This functionality is not available with LocalStorage');\n  }\n\n  /**\n   * Load files from directory\n   */\n  public loadFiles(nodeId = ''): Observable<IOuterFile[]> {\n    this.currentNodeId = nodeId;\n\n    if (!this.files) {\n      this.files = this.getAllFileDataFromLocalStorage();\n    }\n\n    const files = this.getFilesFromFolder(nodeId);\n\n    const newFiles: IOuterFile[] = files.map((file: IFileDataProperties) => {\n      return this.convertLocalData2IOuterFile(file);\n    });\n\n    return of(newFiles);\n  }\n\n  public removeFile(file: IOuterFile): Observable<boolean> {\n    const index = this.findIndexByFileId(file.id.toString());\n\n    if (index === -1) {\n      return of(false);\n    }\n\n    this.files.splice(index, 1);\n    this.saveFiles();\n\n    return of(true);\n  }\n\n  public removeSelectedFiles(selectedFiles: string[]) {\n    const numberOfFiles = this.files.length;\n\n    selectedFiles.forEach((fileId: string) => {\n      const index = this.findIndexByFileId(fileId);\n\n      if (index > -1) {\n        this.files.splice(index, 1);\n      }\n    });\n\n    this.saveFiles();\n\n    return of((this.files.length + selectedFiles.length === numberOfFiles));\n  }\n\n  public uploadFile(file: IOuterFile): Observable<IOuterFile> {\n    const fileData = this.convertIOuterFile2LocalData(file);\n    this.files.push(fileData);\n\n    if (this.saveFiles()) {\n      return of(this.convertLocalData2IOuterFile(fileData));\n    } else {\n      return Observable.throw('Upload error');\n    }\n  }\n\n  public moveFile(files: IOuterFile[], node: IOuterNode = null): Observable<IOuterFile[]> {\n    const ids: string[] = files.map(file => file.id.toString());\n    const folderId = node ? node.id.toString() : '';\n\n    const movedFiles = this.files.filter(file => ids.indexOf(file.id.toString()) > -1);\n    const errorMsg = 'Can not move file to the same folder';\n\n    const isMovedToSameFolder = false;\n\n    movedFiles.forEach((file) => {\n      if (node) {\n        if (node.id === file.folderId) {\n        }\n      } else {\n        if (file.folderId === '' || file.folderId === null) {\n          return Observable.throw(errorMsg);\n        }\n      }\n\n\n      file.folderId = folderId;\n    });\n\n    if (isMovedToSameFolder) {\n        return Observable.throw(errorMsg);\n    }\n\n    if (this.saveFiles()) {\n      return of(movedFiles.map(file => this.convertLocalData2IOuterFile(file)));\n    } else {\n      return Observable.throw('Move files error');\n    }\n  }\n\n  private findIndexByNodeId(nodeId: string): number {\n    return this.nodes.findIndex((node) => {\n      return node.id === nodeId;\n    });\n  }\n\n  private findIndexByFileId(fileId: string): number {\n    return this.files.findIndex((file) => file.id === fileId);\n  }\n\n  private getChildren(nodeId: string): IOuterNode[] {\n    return this.nodes.filter((node: IOuterNode) => node.parentId === nodeId);\n  }\n\n  private getFilesFromFolder(nodeId: string): IFileDataProperties[] {\n    return this.files.filter((file: IFileDataProperties) => file.folderId === nodeId);\n  }\n\n  protected getAllDataFromLocalStorage(): IOuterNode[] {\n    try {\n      const data = localStorage.getItem(this.treeName);\n\n      if (data) {\n        return JSON.parse(data);\n      }\n\n      return [];\n\n    } catch (e) {\n      return [];\n    }\n  }\n\n  protected getAllFileDataFromLocalStorage(): IFileDataProperties[] {\n    try {\n      const data = localStorage.getItem(this.fileManagerName);\n\n      if (data) {\n        return JSON.parse(data);\n      }\n\n      return [];\n\n    } catch (e) {\n      return [];\n    }\n  }\n\n  private saveNodes() {\n    try {\n      localStorage.setItem(this.treeName, JSON.stringify(this.nodes));\n\n      return true;\n    } catch (e) {\n      this.filemanagerNotfication.sendNotification({\n        type: 'error',\n        title: 'State is not saved.',\n        message: 'Reload previous state.'\n      });\n\n      this.files = null;\n      this.nodes = null;\n\n      this.load();\n\n      return false;\n    }\n  }\n\n  private saveFiles(): boolean {\n    try {\n      localStorage.setItem(this.fileManagerName, JSON.stringify(this.files));\n\n      return true;\n    } catch (e) {\n      this.filemanagerNotfication.sendNotification({\n        type: 'error',\n        title: 'State is not saved.',\n        message: 'Reload previous state.'\n      });\n\n      const nodeId = this.files[(this.files.length - 1)].folderId || null;\n\n      this.files = null;\n\n      this.load(nodeId);\n\n      return false;\n    }\n  }\n\n  private convertLocalData2IOuterFile(file: IFileDataProperties): IOuterFile {\n    return {\n      id: file.id,\n      folderId: file.folderId,\n      name: file.name,\n      thumbnailUrl: file.data,\n      url: file.data,\n      width: file.width,\n      height: file.height,\n      type: file.type,\n      size: file.size\n    };\n  }\n\n  private convertIOuterFile2LocalData(file: IOuterFile): IFileDataProperties {\n    return {\n      id: file.id.toString(),\n      folderId: file.folderId,\n      name: file.name,\n      type: file.type,\n      data: file.data,\n      size: file.size,\n      width: file.width,\n      height: file.height\n    };\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {TreeActionTypes} from '@rign/angular2-tree';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {IOuterNode, TreeMoveNodeAction} from '@rign/angular2-tree';\nimport {FileManagerActionsService, IFileManagerAction} from './fileManagerActions.service';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {empty, Observable, of} from 'rxjs';\nimport {IFileModel} from '../filesList/interface/IFileModel';\nimport {ICropBounds} from '../crop/ICropBounds';\nimport {FileManagerApiService} from './fileManagerApi.service';\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\nimport {catchError, filter, map, switchMap} from 'rxjs/operators';\nimport {\n  CropFileAction,\n  CropFileErrorAction,\n  CropFileSuccessAction,\n  DeleteFileSuccessAction, DeleteSelectedFilesSuccessAction, FileManagerAction, LoadFilesAction,\n  LoadFilesSuccessAction, MoveFilesErrorAction, MoveFilesSuccessAction, UploadFilesErrorAction, UploadFilesSuccessAction\n} from './file-manager.action';\n\n@Injectable()\nexport class FileManagerEffectsService {\n\n  @Effect()\n  public loadFiles$ = this.actions$\n    .pipe(\n      ofType(FileManagerActionsService.FILEMANAGER_LOAD_FILES),\n      switchMap((action: IFileManagerAction) => this.loadFiles(action.payload.folderId)\n        .pipe(\n          map((files: IOuterFile[]): FileManagerAction => {\n            return new LoadFilesSuccessAction({files});\n          }),\n          catchError((e) => {\n            return of(this.onLoadFilesError(action.payload.folderId));\n          })\n        )\n      )\n    );\n\n  @Effect()\n  public cropFile$ = this.actions$\n    .pipe(\n      ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE),\n      switchMap((action: IFileManagerAction) => this.cropFile(action.payload.file, action.payload.bounds)\n        .pipe(\n          map((result: IOuterFile): FileManagerAction => {\n            this.filemanagerNotfication.sendNotification({\n              type: 'success',\n              title: 'Crop Image.',\n              message: 'Image has been cropped.'\n            });\n            return new CropFileSuccessAction({file: action.payload.file});\n          }),\n          catchError(() => of(new CropFileErrorAction({file: action.payload.file})))\n        )\n      )\n    );\n\n  @Effect()\n  public deleteFile$ = this.actions$\n    .pipe(\n      ofType(FileManagerActionsService.FILEMANAGER_DELETE_FILE),\n      switchMap((action: IFileManagerAction) => this.deleteFile(action.payload.file)\n        .pipe(\n          map((result: boolean): FileManagerAction => {\n            return new DeleteFileSuccessAction({file: action.payload.file});\n          }),\n          catchError(() => of(this.onDeleteFileError(action.payload.file)))\n        )\n      )\n    );\n\n  @Effect()\n  public deleteFilesSelection$ = this.actions$\n    .pipe(\n      ofType(FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION),\n      switchMap((action: IFileManagerAction) => this.deleteFilesSelection(action.payload.fileIds)\n        .pipe(\n          map((result: boolean): FileManagerAction => {\n            return new DeleteSelectedFilesSuccessAction({files: action.payload.fileIds});\n          }),\n          catchError(() => of(this.onDeleteFilesSelectionError(action.payload.files)))\n        )\n      )\n    );\n\n\n  @Effect()\n  public uploadFile$ = this.actions$\n    .pipe(\n      ofType(FileManagerActionsService.FILEMANAGER_UPLOAD_FILE),\n      switchMap((action: IFileManagerAction) => this.uploadFile(action.payload.files[0])\n        .pipe(\n          map((result: IOuterFile): FileManagerAction => {\n            return new UploadFilesSuccessAction({files: [result]});\n          }),\n          catchError(() => {\n            return empty();\n          })\n        )\n      )\n    );\n\n  @Effect()\n  public moveFile$ = this.actions$\n    .pipe(\n      ofType(TreeActionTypes.TREE_MOVE_NODE),\n      filter((action: TreeMoveNodeAction) => {\n        return action.payload.sourceOfDroppedData === 'FILE';\n      }),\n      switchMap((action: TreeMoveNodeAction) => this.moveFiles([<IOuterFile>action.payload.oldNode], action.payload.node)\n        .pipe(\n          map((result: IOuterFile[]): FileManagerAction => {\n            const folderId = (<IOuterFile>action.payload.oldNode).folderId;\n\n            return new MoveFilesSuccessAction({files: result, folderId});\n          }),\n          catchError(() => {\n            return of(new MoveFilesErrorAction({files: [<IOuterFile>action.payload.oldNode]}));\n          })\n        )\n      )\n    );\n\n  @Effect()\n  public filesMoveSuccess$ = this.actions$\n    .pipe(\n      ofType(FileManagerActionsService.FILEMANAGER_MOVE_FILES_SUCCESS),\n      map((action: MoveFilesSuccessAction) => {\n        this.onMoveFilesSuccess();\n\n        return new LoadFilesAction({folderId: action.payload.folderId});\n      })\n    );\n\n  public uploadError$ = this.actions$\n    .pipe(\n      ofType(FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_ERROR),\n      map((action: UploadFilesErrorAction) => {\n        this.filemanagerNotfication.sendNotification({\n          type: 'alert',\n          title: 'File upload',\n          message: `${action.payload.files[0].name} exists on the server in this directory`\n        });\n      })\n    );\n\n  public cropFileSuccess$: Observable<CropFileSuccessAction>;\n  public deleteFileSuccess$: Observable<DeleteFileSuccessAction>;\n\n  constructor(private actions$: Actions,\n              private fileManagerActions: FileManagerActionsService,\n              private filemanagerNotfication: FilemanagerNotifcations,\n              private fileManagerApiService: FileManagerApiService) {\n\n    this.cropFileSuccess$ = this.actions$\n      .pipe(\n        ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE_SUCCESS)\n      );\n\n    this.deleteFileSuccess$ = this.actions$\n      .pipe(\n        ofType(FileManagerActionsService.FILEMANAGER_DELETE_FILE_SUCCESS)\n      );\n\n    this.actions$\n      .pipe(\n        ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE_ERROR)\n      )\n      .subscribe((action: IFileManagerAction) => {\n        this.onCropFileError(action.payload.file);\n      });\n\n    this.actions$\n      .pipe(\n        ofType(FileManagerActionsService.FILEMANAGER_MOVE_FILES_ERROR)\n      )\n      .subscribe((action: IFileManagerAction) => {\n        this.onMoveFilesError();\n      });\n  }\n\n  protected cropFile(file: IFileModel, bounds: ICropBounds): Observable<IOuterFile> {\n    return this.fileManagerApiService.cropFile(file.toJSON(), bounds);\n  }\n\n  protected deleteFile(file: IFileModel): Observable<boolean> {\n    return this.fileManagerApiService.removeFile(file.toJSON());\n  }\n\n  protected deleteFilesSelection(files: string[]): Observable<boolean> {\n    return this.fileManagerApiService.removeSelectedFiles(files);\n  }\n\n  protected loadFiles(folderId: string | null): Observable<IOuterFile[]> {\n    return this.fileManagerApiService.loadFiles(folderId);\n  }\n\n  protected uploadFile(file: IOuterFile): Observable<IOuterFile> {\n    return this.fileManagerApiService.uploadFile(file);\n  }\n\n  protected moveFiles(files: IOuterFile[], folder: IOuterNode = null): Observable<IOuterFile[]> {\n    return this.fileManagerApiService.moveFile(files, folder);\n  }\n\n  protected onCropFileError(file: IFileModel): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'alert',\n      title: 'Crop Image',\n      message: '[FILEMANAGER] Can not crop file'\n    });\n  }\n\n  protected onDeleteFileError(file: IFileModel): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'error',\n      title: 'Delete file',\n      message: '[FILEMANAGER] Can not delete file' + file.name\n    });\n  }\n\n  protected onDeleteFilesSelectionError(files: IOuterFile[]): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'error',\n      title: 'Delete selected files',\n      message: '[FILEMANAGER] Not all files were deleted'\n    });\n  }\n\n  protected onLoadFilesError(folderId: string): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'error',\n      title: 'Load files',\n      message: '[FILEMANAGER] Can not load files for folder ' + folderId\n    });\n  }\n\n  protected onMoveFilesSuccess(): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'success',\n      title: 'Move files',\n      message: 'File was successfully moved to folder'\n    });\n  }\n\n  protected onMoveFilesError(): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'error',\n      title: 'Move files',\n      message: 'File was not successfully moved to new folder'\n    });\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {FileModel} from './file.model';\nimport {IFileEvent} from './interface/IFileEvent';\nimport {IFileModel} from './interface/IFileModel';\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\nimport {IFileManagerAction} from '../store/fileManagerActions.service';\nimport {FileManagerDispatcherService} from '../store/file-manager-dispatcher.service';\nimport {NotificationsService} from 'angular2-notifications';\nimport {FileManagerEffectsService} from '../store/fileManagerEffects.service';\nimport {FILEMANAGER_TREE_NAME} from '../store/fileManagerApiAbstract.class';\nimport {Store} from '@ngrx/store';\nimport {IFileManagerState} from '../store/file-manager.reducer';\nimport {DeleteFileAction, SelectFileAction, UnSelectFileAction} from '../store/file-manager.action';\n\n@Component({\n  selector: 'ri-files-list',\n  templateUrl: './files.html',\n  styleUrls: ['./files-list.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class FilesListComponent {\n  @Input()\n  public files: FileModel[];\n\n  @Input()\n  public selectedFiles: string[];\n\n  @Output()\n  public onPreviewFile = new EventEmitter();\n\n  @Output()\n  public onCropFile = new EventEmitter();\n\n  @Output()\n  public onSelectFile = new EventEmitter();\n\n  public removeTitle = 'Remove file';\n\n  public dragZone = FILEMANAGER_TREE_NAME;\n\n  public constructor(public configuration: FileManagerConfiguration,\n                     private store: Store<IFileManagerState>,\n                     private fileManagerDispatcher: FileManagerDispatcherService,\n                     notifications: NotificationsService,\n                     fileManagerEffects: FileManagerEffectsService) {\n\n    fileManagerEffects.deleteFileSuccess$\n      .subscribe((action: IFileManagerAction) => {\n        notifications.success('File delete', `${action.payload.file.name} has been deleted`);\n      });\n  }\n\n  /**\n   * Fired when clicked on button \"delete file\"\n   *\n   * @param file\n   */\n  public deleteFile(file: IFileModel) {\n    this.store.dispatch(new DeleteFileAction({file}));\n  }\n\n  public getRemoveMessage(file: IFileModel) {\n    return 'You are try to delete <b>' + file.name + '</b>. Are you sure?';\n  }\n\n  public openPreview(fileEvent: IFileEvent): void {\n    this.onPreviewFile.emit(fileEvent);\n  }\n\n  public openCrop(fileEvent: IFileEvent): void {\n    this.onCropFile.emit(fileEvent);\n  }\n\n  public toggleSelection(file: IFileModel): void {\n    if (file.selected) {\n      this.store.dispatch(new UnSelectFileAction({file}));\n    } else {\n      this.store.dispatch(new SelectFileAction({file}));\n    }\n  }\n\n  public isSelected(file: FileModel): boolean {\n    return this.selectedFiles.indexOf(file.getId().toString()) > -1;\n  }\n}\n","import {Component, Input, OnChanges, HostListener} from '@angular/core';\nimport {IFileModel} from '../filesList/interface/IFileModel';\nimport {FileModel} from '../filesList/file.model';\n\n@Component({\n  selector: 'ri-file-preview',\n  templateUrl: './preview.html'\n})\n\nexport class PreviewComponent implements OnChanges {\n  /**\n   * Collection of files\n   */\n  @Input() files: IFileModel[];\n\n  /**\n   * Current viewed file\n   */\n  @Input() file: IFileModel;\n\n  /**\n   * Current index\n   */\n  public currentIndex = 0;\n\n  public length = 0;\n\n  ngOnChanges() {\n    this.length = this.files.length;\n\n    const selectedFiles = this.files\n      .filter((file: FileModel) => file.getId() === this.file.getId());\n\n    this.currentIndex = selectedFiles.length === 1 ? this.files.indexOf(selectedFiles[0]) : -1;\n  }\n\n  public next() {\n    if (this.currentIndex < this.length - 1) {\n      this.currentIndex++;\n    }\n  }\n\n  public prev() {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    }\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  public keyEvent(event: KeyboardEvent) {\n    if (event.keyCode === 37 || event.keyCode === 74) {\n      this.prev();\n    }\n\n    if (event.keyCode === 39 || event.keyCode === 75) {\n      this.next();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable()\nexport class SearchFilterService {\n  /**\n   * File type filter\n   */\n  public filter$: BehaviorSubject<string> = new BehaviorSubject('');\n\n  public getValue(): string {\n    return this.filter$.getValue();\n  }\n\n  public setValue(value: string) {\n    this.filter$.next(value);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {IFileTypeFilter} from '../toolbar/interface/IFileTypeFilter';\n\n@Injectable()\nexport class FileTypeFilterService {\n\n  /**\n   * File type filter\n   */\n  public filter$: BehaviorSubject<IFileTypeFilter | null> = new BehaviorSubject(null);\n\n  public getValue(): IFileTypeFilter | null {\n    return this.filter$.getValue();\n  }\n\n  public setValue(value: IFileTypeFilter | null) {\n    this.filter$.next(value);\n  }\n}\n","import {IOuterFile} from './interface/IOuterFile';\nimport {IFileModel} from './interface/IFileModel';\nimport {ISelectFile} from './interface/ISelectFile';\n\nexport class FileModel implements IFileModel {\n  static smallIconsFolder = '/icons/128px/';\n  static bigIconsFolder = '/icons/512px/';\n\n  private _orgData: IOuterFile;\n  private _name: string;\n\n  private _iconsFolder = FileModel.smallIconsFolder;\n\n  public selected = false;\n\n  set name(name: string) {\n    this._name = name;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get thumbnailUrl() {\n    return this.isImage() ? this._orgData.thumbnailUrl : `${FileModel.smallIconsFolder}${this.getFileExt()}.png`;\n  }\n\n  get url() {\n    return this.isImage() ? this._orgData.url : `${FileModel.bigIconsFolder}${this.getFileExt()}.png`;\n  }\n\n  public constructor(data: IOuterFile) {\n    this.fromJSON(data);\n  }\n\n  public fromJSON(data: IOuterFile) {\n    this._orgData = data;\n\n    this.name = data.name;\n    this.selected = data.selected || false;\n  }\n\n  public toJSON() {\n    return this._orgData;\n  }\n\n  public getId() {\n    return this._orgData.id;\n  }\n\n  public getHeight(): number {\n    return this._orgData.height || 0;\n  }\n\n  public getFileExt() {\n    return this.name.split('.').pop();\n  }\n\n  public getMime() {\n    return this._orgData.type;\n  }\n\n  public getWidth(): number {\n    return this._orgData.width || 0;\n  }\n\n  public isImage() {\n    return ['image/jpg', 'image/jpeg', 'image/png', 'image/gif', 'image/png'].indexOf(this.getMime()) > -1;\n  }\n\n  public getSelectData(): ISelectFile {\n    return {\n      id: this.getId(),\n      name: this.name,\n      url: this.url,\n      width: this.getWidth(),\n      height: this.getHeight(),\n      mime: this.getMime()\n    };\n  }\n}\n","import {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {createFeatureSelector, MemoizedSelector} from '@ngrx/store';\nimport {\n  CropFileSuccessAction, DeleteFileSuccessAction,\n  FileManagerAction,\n  FileManagerActionTypes,\n  LoadFilesSuccessAction,\n  MoveFilesSuccessAction, SelectFileAction, UnSelectFileAction, UploadFilesSuccessAction\n} from './file-manager.action';\n\nexport interface StoreEntities {\n  [key: string]: IOuterFile;\n}\n\nexport interface IFileManagerState {\n  entities: StoreEntities;\n  files: string[];\n  selectedFiles: string[];\n}\n\n\nfunction cropFile(state: IFileManagerState, action: CropFileSuccessAction): IFileManagerState {\n  const file = action.payload.file;\n  const id = file.getId().toString();\n\n  state.entities[id] = <IOuterFile>{...file.toJSON()};\n\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: state.selectedFiles\n  };\n}\n\nfunction inverseFilesSelection(state: IFileManagerState): IFileManagerState {\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: state.files.filter((i: string) => state.selectedFiles.indexOf(i) === -1)\n  };\n}\n\nfunction loadFiles(state: IFileManagerState, action: LoadFilesSuccessAction): IFileManagerState {\n  const entities: StoreEntities = {};\n  const files: string[] = [];\n\n  action.payload.files.map((file: IOuterFile) => {\n    const id = file.id.toString();\n\n    entities[id] = file;\n    files.push(id);\n  });\n\n\n  return {\n    entities: entities,\n    files: files,\n    selectedFiles: []\n  };\n}\n\n\nfunction moveFiles(state: IFileManagerState, action: MoveFilesSuccessAction): IFileManagerState {\n  const files = action.payload.files;\n  const ids: string[] = files.map(file => file.id.toString());\n  const folderId = action.payload.folderId ? action.payload.folderId.toString() : '';\n\n  const entities = {...state.entities};\n\n  ids.forEach((id: string) => {\n    const oldEntity = {...entities[id]};\n    oldEntity.folderId = folderId;\n\n    entities[id] = oldEntity;\n  });\n\n  return {\n    entities: entities,\n    files: state.files.filter((i: string) => ids.indexOf(i) === -1),\n    selectedFiles: state.selectedFiles.filter((i: string) => ids.indexOf(i) === -1)\n  };\n}\n\nfunction removeFile(state: IFileManagerState, action: DeleteFileSuccessAction): IFileManagerState {\n  const id = action.payload.file.getId();\n\n  delete state.entities[id];\n\n  return {\n    entities: state.entities,\n    files: state.files.filter((i: string) => i !== id),\n    selectedFiles: state.selectedFiles\n  };\n}\n\nfunction removeSelectedFiles(state: IFileManagerState): IFileManagerState {\n  const files: string[] = state.files.filter((i: string) => state.selectedFiles.indexOf(i) === -1);\n  const entities: StoreEntities = {};\n\n  files.forEach((fileId: string) => {\n    entities[fileId] = state.entities[fileId];\n  });\n\n  return {\n    entities: entities,\n    files: files,\n    selectedFiles: []\n  };\n}\n\nfunction selectFile(state: IFileManagerState, action: SelectFileAction): IFileManagerState {\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: [...state.selectedFiles, action.payload.file.getId().toString()]\n  };\n}\n\nfunction selectAllFiles(state: IFileManagerState): IFileManagerState {\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: [...state.files]\n  };\n}\n\nfunction uploadFiles(state: IFileManagerState, action: UploadFilesSuccessAction): IFileManagerState {\n  const newState = {\n    entities: {...state.entities},\n    files: [...state.files],\n    selectedFiles: []\n  };\n\n  action.payload.files.forEach((file: IOuterFile) => {\n    const id = file.id.toString();\n\n    newState.entities[id] = file;\n    newState.files.push(id);\n  });\n\n\n  return newState;\n}\n\n\nfunction unSelectAllFiles(state: IFileManagerState): IFileManagerState {\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: []\n  };\n}\n\nfunction unSelectFile(state: IFileManagerState, action: UnSelectFileAction): IFileManagerState {\n  const fileId = action.payload.file.getId().toString();\n\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: state.selectedFiles.filter((id: string) => id !== fileId)\n  };\n}\n\nexport function fileManagerReducer(state: IFileManagerState = {\n  entities: {},\n  files: [],\n  selectedFiles: []\n}, action: FileManagerAction): IFileManagerState {\n  switch (action.type) {\n    case FileManagerActionTypes.CROP_FILE_SUCCESS:\n      return cropFile(state, action);\n    case FileManagerActionTypes.INVERSE_FILE_SELECTION:\n      return inverseFilesSelection(state);\n    case FileManagerActionTypes.DELETE_FILE_SELECTION_SUCCESS:\n      return removeSelectedFiles(state);\n    case FileManagerActionTypes.DELETE_FILE_SUCCESS:\n      return removeFile(state, action);\n    case FileManagerActionTypes.MOVE_FILES_SUCCESS:\n      return moveFiles(state, action);\n    case FileManagerActionTypes.LOAD_FILES_SUCCESS:\n      return loadFiles(state, action);\n    case FileManagerActionTypes.SELECT_ALL:\n      return selectAllFiles(state);\n    case FileManagerActionTypes.SELECT_FILE:\n      return selectFile(state, action);\n    case FileManagerActionTypes.UNSELECT_ALL:\n      return unSelectAllFiles(state);\n    case FileManagerActionTypes.UNSELECT_FILE:\n      return unSelectFile(state, action);\n    case FileManagerActionTypes.UPLOAD_FILE_SUCCESS:\n      return uploadFiles(state, action);\n    case FileManagerActionTypes.DELETE_FILE_SELECTION:\n    case FileManagerActionTypes.CROP_FILE:\n    case FileManagerActionTypes.DELETE_FILE:\n    case FileManagerActionTypes.LOAD_FILES:\n    case FileManagerActionTypes.MOVE_FILES_ERROR:\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport const filemanagerStateSelector: MemoizedSelector<object, IFileManagerState> = createFeatureSelector<IFileManagerState>('files');\n\nexport const getAll = (state: IFileManagerState): IOuterFile[] => {\n  return state.files.map((id: string) => state.entities[id]);\n};\n\nexport const isChangeStateFiles = (newState: IFileManagerState, prevState: IFileManagerState): boolean => {\n  return prevState.files.length !== newState.files.length || prevState.files.filter((i: string) => newState.files.indexOf(i) === -1).length > 0;\n};\n\nexport const isChangeStateSelectedFiles = (newState: IFileManagerState, prevState: IFileManagerState): boolean => {\n  return prevState.selectedFiles.length !== newState.selectedFiles.length || prevState.selectedFiles.filter((i: string) => newState.selectedFiles.indexOf(i) === -1).length > 0;\n};\n","import {ITreeState} from '@rign/angular2-tree';\nimport {SearchFilterService} from './searchFilter.service';\nimport {FileTypeFilterService} from './fileTypeFilter.service';\nimport {Store} from '@ngrx/store';\nimport {FileModel} from '../filesList/file.model';\nimport {filemanagerStateSelector, getAll, IFileManagerState, StoreEntities} from '../store/file-manager.reducer';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {IFileTypeFilter} from '../toolbar/interface/IFileTypeFilter';\nimport {Injectable} from '@angular/core';\nimport {distinctUntilChanged, map, withLatestFrom} from 'rxjs/operators';\nimport {combineLatest, Observable} from 'rxjs';\n\n@Injectable()\nexport class CurrentDirectoryFilesService {\n\n  /**\n   * List of all files\n   */\n  public files$: Observable<FileModel[]>;\n\n  /**\n   * List of files for current selected directory\n   */\n  public filteredFiles$: Observable<FileModel[]>;\n\n  /**\n   * List of all files as JSON data\n   */\n  public entities$: Observable<StoreEntities>;\n\n  /**\n   * List of selected file ids\n   */\n  public selectedFiles$: Observable<string[]>;\n\n  /**\n   * List of all files in current directory\n   */\n  public currentDirectoryFileIds$: Observable<string[]>;\n\n  public constructor(private store: Store<IFileManagerState>,\n                     private fileTypeFilter: FileTypeFilterService,\n                     private searchFilterService: SearchFilterService) {\n\n    const store$ = this.store.select(filemanagerStateSelector);\n    const observable$ = store$;\n    this.entities$ = observable$\n      .pipe(\n        map((state: IFileManagerState) => state.entities),\n        distinctUntilChanged()\n      );\n\n    this.currentDirectoryFileIds$ = observable$\n      .pipe(\n        map((state: IFileManagerState) => state.files),\n        distinctUntilChanged()\n      );\n\n    this.selectedFiles$ = store$\n      .pipe(\n        map((state: IFileManagerState) => state.selectedFiles)\n      );\n\n    this.files$ = this.getFilesStream();\n    this.filteredFiles$ = this.getCurrentDirectoryFilesStream();\n  }\n\n  /**\n   * Return stream of files\n   */\n  private getFilesStream(): Observable<FileModel[]> {\n    return this.currentDirectoryFileIds$\n      .pipe(\n        withLatestFrom(this.entities$),\n        map((ar: any) => {\n          return {\n            entities: ar[1],\n            files: ar[0]\n          };\n        }),\n        map((state: any) => {\n          return getAll(state)\n            .map((file: IOuterFile) => {\n              return new FileModel(file);\n            });\n        })\n      );\n  }\n\n  /**\n   * Return stream of current directory filtered files\n   */\n  private getCurrentDirectoryFilesStream(): Observable<FileModel[]> {\n    return combineLatest(\n      this.files$,\n      this.fileTypeFilter.filter$,\n      this.searchFilterService.filter$\n    )\n      .pipe(\n        map((data: [FileModel[], IFileTypeFilter, string]): FileModel[] => {\n          let files = data[0];\n          const fileTypeFilter = data[1];\n          const search = data[2].toLocaleLowerCase();\n\n          if (search !== '') {\n            files = files.filter((file: FileModel) => {\n              return file.name.toLocaleLowerCase().indexOf(search) > -1;\n            });\n          }\n\n\n          if (fileTypeFilter && fileTypeFilter.mimes.length > 0) {\n            files = files.filter((file: FileModel) => {\n              return fileTypeFilter.mimes.indexOf(file.getMime()) > -1;\n            });\n          }\n\n          return files;\n        })\n      );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {INodeService, IOuterNode} from '@rign/angular2-tree';\nimport {Observable, of} from 'rxjs';\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\nimport {AbstractFileManagerApiService, FILEMANAGER_TREE_NAME} from './fileManagerApiAbstract.class';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {IFileManagerApi} from './IFileManagerApi';\nimport {map} from 'rxjs/operators';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {ICropBounds} from '../crop/ICropBounds';\nimport {IFileDataProperties} from '../services/imageDataConverter.service';\n\n@Injectable()\nexport class FileManagerBackendApiService extends AbstractFileManagerApiService implements IFileManagerApi, INodeService {\n\n  public constructor(private $http: HttpClient,\n                     private configuration: FileManagerConfiguration) {\n    super();\n    this.nodes = [];\n    this.files = [];\n  }\n\n  public get treeId(): string {\n    return FILEMANAGER_TREE_NAME;\n  }\n\n  /**\n   * Load folder chidls for given folder id\n   */\n  public load(nodeId = ''): Observable<IOuterNode[]> {\n    const nodeIds = this.nodes.map((node: IOuterNode) => node.id);\n\n    const params = new HttpParams().set('nodeId', nodeId || '');\n\n    return this.$http.get<IOuterNode[]>(this.configuration.folderUrls.foldersUrl, {params})\n      .pipe(\n        map((nodes: IOuterNode[]) => {\n          nodes.forEach((node: IOuterNode) => {\n            if (nodeIds.indexOf(node.id) === -1) {\n              this.nodes.push(node);\n            } else {\n              const index = this.nodes.findIndex((item: IOuterNode) => node.id === item.id);\n              this.nodes[index] = node;\n            }\n          });\n\n          return nodes;\n        })\n      );\n  }\n\n  /**\n   * Create new folder\n   */\n  public add(node: IOuterNode, parentNodeId: string = null): Observable<IOuterNode> {\n    const data = {\n      node: node,\n      parentNodeId: parentNodeId\n    };\n\n    return this.$http.post<IOuterNode>(this.configuration.folderUrls.foldersUrl, data)\n      .pipe(\n        map((newNode: IOuterNode) => {\n          this.nodes.push(newNode);\n\n          return newNode;\n        })\n      );\n  }\n\n  /**\n   * Move folder from source parent to target parent\n   */\n  public move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode> {\n    const srcId = srcNode.id;\n    const targetId = targetNode ? targetNode.id : null;\n\n\n    return this.$http.put<IOuterNode>(this.configuration.folderUrls.folderMoveUrl, {source: srcId, target: targetId})\n      .pipe(\n        map((movedNode: IOuterNode) => {\n          const index = this.findIndexByNodeId(srcId);\n          this.nodes[index].parentId = targetId;\n\n          return movedNode;\n        })\n      );\n  }\n\n  /**\n   * Update folder name\n   */\n  public update(node: IOuterNode): Observable<IOuterNode> {\n    return this.$http.put<IOuterNode>(this.configuration.folderUrls.foldersUrl, node)\n      .pipe(\n        map((newNode: IOuterNode) => {\n          const index = this.findIndexByNodeId(node.id);\n\n          this.nodes[index] = newNode;\n\n          return newNode;\n        })\n      );\n  }\n\n  /**\n   * Remove node by given id\n   */\n  public remove(nodeId: string): Observable<IOuterNode> {\n    const index = this.findIndexByNodeId(nodeId);\n\n    const hasChildren = this.getChildren(nodeId).length > 0;\n\n    if (!hasChildren) {\n      const params = new HttpParams().set('nodeId', nodeId);\n\n      return this.$http.delete<IOuterNode>(this.configuration.folderUrls.foldersUrl, {params})\n        .pipe(\n          map((removedNode: IOuterNode) => {\n            this.nodes.splice(index, 1);\n\n            return removedNode;\n          })\n        );\n    } else {\n      return Observable.throw('Node is not empty');\n    }\n  }\n\n  public setAllNodes(nodes: IOuterNode[]): void {\n    this.nodes = [...nodes];\n  }\n\n  /**\n   * Crop file\n   */\n  public cropFile(file: IOuterFile, bounds: ICropBounds): Observable<IOuterFile> {\n    return this.$http.put<IOuterFile>(this.configuration.fileUrl, {id: file.id, bounds: bounds});\n  }\n\n  /**\n   * Load files from directory\n   */\n  public loadFiles(nodeId = ''): Observable<IOuterFile[]> {\n    this.currentNodeId = nodeId;\n    const params = new HttpParams().set('dirId', nodeId);\n\n    return this.$http.get<IOuterFile[]>(this.configuration.fileUrl, {params})\n      .pipe(\n        map((files: IOuterFile[]) => {\n          this.files = files.map((file: IOuterFile) => <IFileDataProperties>file);\n\n          return files;\n        })\n      );\n  }\n\n  /**\n   * Remove file from folder\n   */\n  public removeFile(file: IOuterFile): Observable<boolean> {\n    const index = this.findIndexByFileId(file.id.toString());\n\n    if (index === -1) {\n      return of(false);\n    }\n\n    const params = new HttpParams().set('id', file.id.toString());\n\n    return this.$http.delete<any>(this.configuration.fileUrl, {params})\n      .pipe(\n        map(() => {\n          this.files.splice(index, 1);\n\n          return true;\n        })\n      );\n  }\n\n  public removeSelectedFiles(selectedFiles: string[]) {\n    const params = new HttpParams().set('id', selectedFiles.join('|'));\n\n    return this.$http.delete<any>(this.configuration.fileUrl, {params})\n      .pipe(\n        map(() => {\n          selectedFiles.forEach((fileId: string) => {\n            const index = this.findIndexByFileId(fileId);\n\n            if (index > -1) {\n              this.files.splice(index, 1);\n            }\n          });\n\n          return true;\n        })\n      );\n  }\n\n  /**\n   * This method is success method, real upload is done in ExtendedFileUploader\n   */\n  public uploadFile(file: IOuterFile): Observable<IOuterFile> {\n    const fileData = <IFileDataProperties>file;\n    this.files.push(fileData);\n\n    return of(file);\n  }\n\n  public moveFile(files: IOuterFile[], node: IOuterNode): Observable<IOuterFile[]> {\n    const ids: string[] = files.map(file => file.id.toString());\n\n    return this.$http.put<IOuterFile[]>(this.configuration.fileUrl, {files: ids, folderId: node ? node.id : ''});\n  }\n\n  private findIndexByNodeId(nodeId: string): number {\n    return this.nodes.findIndex((node) => {\n      return node.id === nodeId;\n    });\n  }\n\n  private findIndexByFileId(fileId: string): number {\n    return this.files.findIndex((file) => file.id === fileId);\n  }\n\n  private getChildren(nodeId: string): IOuterNode[] {\n    return this.nodes.filter((node: IOuterNode) => node.parentId === nodeId);\n  }\n\n  private convertLocalData2IOuterFile(file: IFileDataProperties): IOuterFile {\n    return {\n      id: file.id,\n      folderId: file.folderId,\n      name: file.name,\n      thumbnailUrl: file.data,\n      url: file.data,\n      width: file.width,\n      height: file.height,\n      type: file.type,\n      size: file.size\n    };\n  }\n\n  private convertIOuterFile2LocalData(file: IOuterFile): IFileDataProperties {\n    return {\n      id: file.id.toString(),\n      folderId: file.folderId,\n      name: file.name,\n      type: file.type,\n      data: file.data,\n      size: file.size,\n      width: file.width,\n      height: file.height\n    };\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {IFileTypeFilter} from '../interface/IFileTypeFilter';\nimport {FileTypeFilterService} from '../../services/fileTypeFilter.service';\n\n@Component({\n  selector: 'ri-file-type-filter',\n  templateUrl: './fileTypeFilter.component.html'\n})\n\nexport class FileTypeFilterComponent implements OnInit {\n  @Input() typeFilterList: IFileTypeFilter[] = [];\n\n  public selectedType: IFileTypeFilter = null;\n\n  constructor(private fileTypeFilter: FileTypeFilterService) {\n    this.fileTypeFilter.filter$\n      .subscribe((type: IFileTypeFilter | null) => {\n        this.selectedType = type;\n      })\n  }\n\n  ngOnInit() {\n    /** init file type filter **/\n    this.typeFilterList\n      .filter((type: IFileTypeFilter) => {\n        return type.defaultSelected;\n      })\n      .forEach((type: IFileTypeFilter) => {\n        this.fileTypeFilter.setValue(type);\n      });\n  }\n\n  /**\n   * Set current filter and fire event\n   * @param type\n   */\n  public setFilterType(type: IFileTypeFilter) {\n    this.fileTypeFilter.setValue(type);\n  }\n}\n","export class IUploadItemEvent {\n  name: string;\n  response: any;\n  status: number;\n}\n","export enum Button {\n  ADD_FOLDER = 'ADD_FOLDER',\n  CHOOSE_SELECTION = 'CHOOSE_SELECTION',\n  DELETE_SELECTION = 'DELETE_SELECTION',\n  INVERSE_SELECTION = 'INVERSE_SELECTION',\n  REFRESH_FILES_LIST = 'REFRESH_FILES_LIST',\n  SELECT_ALL = 'SELECT_ALL',\n  UNSELECT_ALL = 'UNSELECT_ALL',\n}\n","import {IToolbarEvent} from '../interface/IToolbarEvent';\n\nexport class ToolbarEventModel implements IToolbarEvent {\n  constructor(public name: string, public value: string = null) {\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {SearchFilterService} from '../../services/searchFilter.service';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n  selector: 'ri-search-file',\n  templateUrl: './searchFile.component.html'\n})\n\nexport class SearchFileComponent implements OnInit {\n\n  public searchField = new FormControl();\n\n  constructor(private searchFilterService: SearchFilterService) {\n  }\n\n  ngOnInit() {\n    this.searchField.valueChanges\n      .pipe(\n        debounceTime(250)\n      )\n      .subscribe((value: string) => this.searchFilterService.setValue(value));\n  }\n}\n","import {IButton, IButtonData} from './IButton';\n\nexport abstract class AbstractButtonClass implements IButton {\n  public symbol: string;\n  public name: string;\n  public label: boolean;\n  public icon: boolean;\n  public iconCssClass: string;\n  public disabled?: boolean;\n\n  public constructor(data: IButtonData) {\n    this.symbol = data.symbol;\n    this.name = data.name;\n    this.label = data.label;\n    this.icon = data.icon;\n    this.iconCssClass = data.iconCssClass;\n    this.disabled = data.disabled;\n  }\n\n  abstract isDivider(): boolean;\n}\n","import {AbstractButtonClass} from './AbstractButton.class';\n\nexport class ButtonClass extends AbstractButtonClass {\n  public isDivider(): boolean {\n    return false;\n  }\n}\n","import {AbstractButtonClass} from './AbstractButton.class';\n\nexport class ButtonDividerClass extends AbstractButtonClass {\n  public constructor() {\n    super({\n      symbol: '',\n      name: '',\n      label: false,\n      icon: false,\n      iconCssClass: ''\n    });\n  }\n\n  public isDivider(): boolean {\n    return true;\n  }\n}\n","import {Component, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {IButton, IButtonData} from '../../dropdown/IButton';\nimport {ButtonClass} from '../../dropdown/Button.class';\nimport {Button} from '../models/button.model';\nimport {ButtonDividerClass} from '../../dropdown/ButtonDivider.class';\nimport {CurrentDirectoryFilesService} from '../../services/currentDirectoryFiles.service';\nimport {combineLatest, Subscription} from 'rxjs';\nimport {FileManagerConfiguration} from '../../configuration/fileManagerConfiguration.service';\nimport {IToolbarEvent} from '../interface/IToolbarEvent';\nimport {ToolbarEventModel} from '../models/toolbarEvent.model';\nimport {distinctUntilChanged} from 'rxjs/operators';\n\n@Component({\n  selector: 'ri-selection-dropdown',\n  templateUrl: './selection.dropdown.html'\n})\nexport class SelectionComponent implements OnDestroy {\n  @Output()\n  public onMenuButtonClick = new EventEmitter();\n\n  public selectButtonsList: IButton[];\n\n  public selectAllButton = new ButtonClass({\n    symbol: Button.SELECT_ALL,\n    name: 'RI_FM_LBL_SELECT_ALL',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-check-square-o'\n  });\n\n  private unselectAllButton = new ButtonClass({\n    symbol: Button.UNSELECT_ALL,\n    name: 'RI_FM_LBL_UNSELECT_ALL',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-square-o'\n  });\n\n  private inverseSelectionButton = new ButtonClass({\n    symbol: Button.INVERSE_SELECTION,\n    name: 'RI_FM_LBL_INVERSE_SELECTION',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-check-square'\n  });\n\n  private deleteSelectionButton = new ButtonClass({\n    symbol: Button.DELETE_SELECTION,\n    name: 'RI_FM_LBL_DELETE_SELECTION',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-trash'\n  });\n\n  private chooseSelectionButton = new ButtonClass({\n    symbol: Button.CHOOSE_SELECTION,\n    name: 'RI_FM_LBL_CHOOSE_SELECTION',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-image'\n  });\n\n  private onLoadFilesSubscriber: Subscription;\n\n  public constructor(public configuration: FileManagerConfiguration,\n                     private currentDirectoryFilesService: CurrentDirectoryFilesService) {\n\n    this.selectButtonsList = this.createBasicButtons();\n\n    this.initListenOnLoadFiles();\n  }\n\n  public ngOnDestroy() {\n    this.onLoadFilesSubscriber.unsubscribe();\n  }\n\n  /**\n   * Initialize listener on load files\n   */\n  public initListenOnLoadFiles() {\n    this.onLoadFilesSubscriber = combineLatest(\n      this.currentDirectoryFilesService.currentDirectoryFileIds$,\n      this.currentDirectoryFilesService.selectedFiles$\n    )\n      .pipe(\n        distinctUntilChanged()\n      )\n      .subscribe((data: string[][]) => {\n        const numberOfFiles = data[0].length;\n        const numberOfSelectedFiles = data[1].length;\n\n        this.disableAllButtons();\n\n        if (numberOfFiles > 0) {\n          if (numberOfSelectedFiles > 0) {\n            this.enableAllButtons();\n          } else {\n            this.enableSelectAllButton();\n          }\n        }\n      });\n  }\n\n\n  public onSelectDropdownClick(button: IButtonData) {\n    const event: IToolbarEvent = new ToolbarEventModel(button.symbol);\n    this.onMenuButtonClick.emit(event);\n  }\n\n  /**\n   * Disable all dropdown buttons and main button\n   */\n  private disableAllButtons(): void {\n    this.selectAllButton.disabled = true;\n\n    this.selectButtonsList\n      .filter((button: IButton) => {\n        return !button.isDivider();\n      })\n      .forEach((button: IButtonData) => {\n        button.disabled = true;\n      });\n  }\n\n  /**\n   * Enable all dropdown buttons and main button\n   */\n  private enableAllButtons(): void {\n    this.selectAllButton.disabled = false;\n\n    this.selectButtonsList\n      .forEach((button: IButtonData) => {\n        button.disabled = false;\n      });\n  }\n\n  /**\n   * Create list of buttons\n   */\n  private createBasicButtons(): IButton[] {\n    const buttons = [\n      this.selectAllButton,\n      this.unselectAllButton,\n      this.inverseSelectionButton,\n      new ButtonDividerClass(),\n      this.deleteSelectionButton,\n    ];\n\n    if (this.configuration.allowChooseMultipleFiles) {\n      buttons.push(new ButtonDividerClass());\n      buttons.push(this.chooseSelectionButton);\n    }\n\n    return buttons;\n  }\n\n  /**\n   * Enable only select button\n   */\n  private enableSelectAllButton(): void {\n    this.selectAllButton.disabled = false;\n    this.inverseSelectionButton.disabled = false;\n  }\n}\n","import {Component, EventEmitter, Output, Input, OnChanges} from '@angular/core';\nimport {Button} from './models/button.model';\nimport {ToolbarEventModel} from './models/toolbarEvent.model';\nimport {IToolbarEvent} from './interface/IToolbarEvent';\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\nimport {FileManagerUploader} from '../filesList/fileManagerUploader.service';\nimport {Store} from '@ngrx/store';\nimport {IFileManagerState} from '../store/file-manager.reducer';\nimport {UploadFilesAction, UploadFilesErrorAction} from '../store/file-manager.action';\n\n@Component({\n  selector: 'ri-toolbar',\n  styleUrls: ['./toolbar.scss'],\n  templateUrl: './toolbar.html'\n})\n\nexport class ToolbarComponent implements OnChanges {\n  @Input() currentFolderId: string;\n\n  @Output() onAddFolderClick = new EventEmitter();\n  @Output() onUpload = new EventEmitter();\n  @Output() onMenuButtonClick = new EventEmitter();\n\n\n  public constructor(public configuration: FileManagerConfiguration,\n                     public fileManagerUploader: FileManagerUploader,\n                     private store: Store<IFileManagerState>) {\n\n    this.fileManagerUploader.clear();\n\n    this.fileManagerUploader.uploader.onCompleteAll = () => {\n      this.onUpload.emit(this.currentFolderId || '');\n    };\n\n    this.fileManagerUploader.uploader.onCompleteItem = (item: any, response: any, status: number, headers: any) => {\n      if (status === 200) {\n        this.store.dispatch(new UploadFilesAction({files: JSON.parse(response)}));\n      } else {\n        this.store.dispatch(new UploadFilesErrorAction({files: JSON.parse(response)}));\n      }\n    };\n  }\n\n  public ngOnChanges() {\n    this.fileManagerUploader.setDirectoryId(this.currentFolderId || '');\n  }\n\n  public addFolder() {\n    let event: IToolbarEvent = new ToolbarEventModel(Button.ADD_FOLDER, 'Nowy folder');\n    this.onAddFolderClick.emit(event);\n  }\n\n  public onRefreshFilesList() {\n    let event: IToolbarEvent = new ToolbarEventModel(Button.REFRESH_FILES_LIST);\n    this.onMenuButtonClick.emit(event);\n  }\n}\n","import {\n  Component, OnInit, ViewChild, HostListener, EventEmitter, Output, OnDestroy\n} from '@angular/core';\nimport {\n  TreeComponent,\n  NodeService,\n  IContextMenu,\n  IOuterNode,\n  ITreeData,\n  ITreeState,\n  IConfiguration,\n  TreeModel,\n  NodeDispatcherService, TreeInitializerService,\n} from '@rign/angular2-tree';\nimport {FileModel} from './filesList/file.model';\nimport {NotificationsService} from 'angular2-notifications';\nimport {IFileEvent} from './filesList/interface/IFileEvent';\nimport {Button} from './toolbar/models/button.model';\nimport {FilesListComponent} from './filesList/filesList.component';\nimport {IToolbarEvent} from './toolbar/interface/IToolbarEvent';\nimport {IFileModel} from './filesList/interface/IFileModel';\nimport {FileManagerConfiguration} from './configuration/fileManagerConfiguration.service';\nimport {Store} from '@ngrx/store';\nimport {FileManagerEffectsService} from './store/fileManagerEffects.service';\nimport {FileManagerApiService} from './store/fileManagerApi.service';\nimport {FilemanagerNotifcations, INotification} from './services/FilemanagerNotifcations';\nimport {CurrentDirectoryFilesService} from './services/currentDirectoryFiles.service';\nimport {IOuterFile} from './filesList/interface/IOuterFile';\nimport {FILEMANAGER_TREE_NAME} from './store/fileManagerApiAbstract.class';\nimport {\n  ChooseFilesAction,\n  DeleteSelectedFilesAction, InverseFilesSelectionAction, LoadFilesAction,\n  SelectAllFilesAction,\n  UnSelectAllFilesAction\n} from './store/file-manager.action';\nimport {combineLatest, Observable, Subscription} from 'rxjs';\n\n@Component({\n  selector: 'ri-filemanager',\n  providers: [NodeService, NotificationsService],\n  styleUrls: ['./main.scss'],\n  templateUrl: './filemanager.html'\n})\nexport class FileManagerComponent implements OnInit, OnDestroy {\n  @Output()\n  public onSingleFileSelect = new EventEmitter();\n\n  @ViewChild(TreeComponent)\n  public treeComponent: TreeComponent;\n\n  @ViewChild(FilesListComponent)\n  public filesList: FilesListComponent;\n\n  /**\n   * List of files for current selected directory\n   */\n  private files$: Observable<FileModel[]>;\n\n  public filteredFiles$: Observable<FileModel[]>;\n  public selectedFiles$: Observable<string[]>;\n\n  public folders: Observable<ITreeData>;\n\n  public treeConfiguration: IConfiguration = {\n    showAddButton: false,\n    disableMoveNodes: false,\n    treeId: FILEMANAGER_TREE_NAME,\n    dragZone: FILEMANAGER_TREE_NAME,\n    dropZone: [FILEMANAGER_TREE_NAME]\n  };\n\n  public treeModel: TreeModel;\n\n  /** UNSED **/\n  public contextMenu: IContextMenu[] = [];\n\n  public currentSelectedFile: IFileModel;\n  public currentSelectedFilesIds: string[] = [];\n  public currentSelectedFiles: IOuterFile[] = [];\n\n  public isPreviewMode = false;\n  public isCropMode = false;\n\n  public notificationOptions = {\n    position: ['bottom', 'right'],\n    timeOut: 3000,\n    lastOnBottom: false,\n    preventDuplicates: true,\n    rtl: false,\n    showProgressBar: true,\n    pauseOnHover: true\n  };\n\n  /**\n   * List of context menu\n   */\n  public menu: IContextMenu[];\n\n  protected currentSelectedFolder: IOuterNode;\n\n  private subscription = new Subscription();\n\n  public constructor(private store: Store<ITreeState>,\n                     private nodeDispatcherService: NodeDispatcherService,\n                     private treeService: FileManagerApiService,\n                     private notifications: NotificationsService,\n                     private configuration: FileManagerConfiguration,\n                     private fileManagerEffects: FileManagerEffectsService,\n                     private filemanagerNotifcations: FilemanagerNotifcations,\n                     private currentDirectoryFilesService: CurrentDirectoryFilesService,\n                     private treeInitializerService: TreeInitializerService) {\n\n    this.menu = configuration.contextMenuItems;\n\n    this.filemanagerNotifcations.getNotificationStream()\n      .subscribe((notification: INotification) => {\n        const {type, title, message} = notification;\n\n        this.notifications[type](title, message);\n      });\n\n    this.subscription.add(\n      this.currentDirectoryFilesService.selectedFiles$\n        .subscribe((data: string[]) => {\n          this.currentSelectedFilesIds = data;\n        })\n    );\n\n    this.subscription.add(\n      combineLatest(\n        this.currentDirectoryFilesService.selectedFiles$,\n        this.currentDirectoryFilesService.entities$,\n      )\n        .subscribe(([ids, entities]: [string[], { [key: string]: IOuterFile }]) => {\n          this.currentSelectedFiles = ids.map((id) => entities[id]);\n        })\n    );\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  public ngOnInit(): void {\n    this.treeModel = this.treeInitializerService.init(this.treeConfiguration, this.treeService);\n\n    this.subscription.add(\n      this.treeModel.currentSelectedNode$\n        .subscribe((node: IOuterNode) => this.currentSelectedFolder = node)\n    );\n\n    /*** START - init files ***/\n    this.files$ = this.currentDirectoryFilesService.files$;\n    this.filteredFiles$ = this.currentDirectoryFilesService.filteredFiles$;\n    this.selectedFiles$ = this.currentDirectoryFilesService.selectedFiles$;\n\n\n    this.subscription.add(\n      this.treeModel.currentSelectedNode$\n        .subscribe((node: IOuterNode | null) => {\n          this.loadFiles(node ? node.id : '');\n        })\n    );\n\n    /*** END - init files ***/\n    this.subscription.add(\n      this.fileManagerEffects.cropFileSuccess$\n        .subscribe(() => {\n          this.closeModal();\n        })\n    );\n  }\n\n  get currentSelectedFolderId(): string | null {\n    return this.currentSelectedFolder ? this.currentSelectedFolder.id : null;\n  }\n\n\n  public onAddFolder() {\n    this.treeComponent.onAdd();\n  }\n\n  /***********************************************************************\n   * FILE EVENTS\n   **********************************************************************/\n  /**\n   * Run when all files are uploaded\n   */\n  public onUpload(folderId: string) {\n    this.notifications.success('File upload', 'Upload complete');\n  }\n\n\n  public onPreviewFile(fileEventData: IFileEvent) {\n    this.isPreviewMode = true;\n    this.currentSelectedFile = fileEventData.file;\n  }\n\n\n  public onOpenCropFileEditor(fileEventData: IFileEvent) {\n    this.isCropMode = true;\n    this.currentSelectedFile = fileEventData.file;\n  }\n\n\n  public onSelectFile(event: FileModel) {\n    this.onSingleFileSelect.next(event.getSelectData());\n  }\n\n  /***********************************************************************\n   * TOOLBAR EVENTS\n   **********************************************************************/\n\n\n  public onMenuButtonClick(event: IToolbarEvent) {\n    switch (event.name) {\n      case Button.CHOOSE_SELECTION:\n        this.store.dispatch(new ChooseFilesAction({files: this.currentSelectedFiles}));\n        break;\n      case Button.DELETE_SELECTION:\n        this.store.dispatch(new DeleteSelectedFilesAction({files: this.currentSelectedFilesIds}));\n        break;\n      case Button.SELECT_ALL:\n        this.store.dispatch(new SelectAllFilesAction());\n        break;\n      case Button.UNSELECT_ALL:\n        this.store.dispatch(new UnSelectAllFilesAction());\n        break;\n      case Button.INVERSE_SELECTION:\n        this.store.dispatch(new InverseFilesSelectionAction());\n        break;\n      case Button.REFRESH_FILES_LIST:\n        this.reloadFiles();\n        break;\n    }\n  }\n\n  /***********************************************************************\n   * OTHER FUNCTIONS\n   **********************************************************************/\n  @HostListener('window:keydown', ['$event'])\n  public keyEvents(event: KeyboardEvent) {\n    if (this.isPreviewMode || this.isCropMode) {\n      if (event.keyCode === 27) {\n        this.closeModal();\n      }\n    }\n  }\n\n  public closeModal() {\n    this.isPreviewMode = false;\n    this.isCropMode = false;\n  }\n\n\n  private loadFiles(folderId: string) {\n    this.store.dispatch(new LoadFilesAction({folderId: folderId || ''}));\n  }\n\n  private reloadFiles() {\n    const id = this.currentSelectedFolder ? this.currentSelectedFolder.id : '';\n\n    this.loadFiles(id);\n  }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, Provider, ModuleWithProviders} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TreeModule} from '@rign/angular2-tree';\nimport {NotificationsService, SimpleNotificationsModule} from 'angular2-notifications';\nimport {FileManagerComponent} from './filemanager.component';\nimport {ToolbarComponent} from './toolbar/toolbar.component';\nimport {FilesListComponent} from './filesList/filesList.component';\nimport {ImageCropperComponent, ImageCropperModule} from 'ng2-img-cropper';\nimport {CropComponent} from './crop/crop.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {DropdownComponent} from './dropdown/dropdown.component';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport {FileManagerConfiguration} from './configuration/fileManagerConfiguration.service';\nimport {FileManagerUploader} from './filesList/fileManagerUploader.service';\nimport {TreeService} from './configuration/tree.service';\nimport {EffectsModule} from '@ngrx/effects';\nimport {FileManagerEffectsService} from './store/fileManagerEffects.service';\nimport {StoreModule} from '@ngrx/store';\nimport {fileManagerReducer} from './store/file-manager.reducer';\nimport {FileManagerActionsService} from './store/fileManagerActions.service';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {FileTypeFilterService} from './services/fileTypeFilter.service';\nimport {SearchFilterService} from './services/searchFilter.service';\nimport {FileManagerDispatcherService} from './store/file-manager-dispatcher.service';\nimport {FileTypeFilterComponent} from './toolbar/fileTypeFilter/fileTypeFilter.component';\nimport {SearchFileComponent} from './toolbar/searchFile/searchFile.component';\nimport {FileManagerApiService} from './store/fileManagerApi.service';\nimport {ImageDataConverter} from './services/imageDataConverter.service';\nimport {FilemanagerNotifcations} from './services/FilemanagerNotifcations';\nimport {ConfirmationPopoverModule} from 'angular-confirmation-popover';\nimport {FileManagerBackendApiService} from './store/fileManagerBackendApi.service';\nimport {CurrentDirectoryFilesService} from './services/currentDirectoryFiles.service';\nimport {SelectionComponent} from './toolbar/selectionDropDown/selection.component';\nimport {FileComponent} from './filesList/file/file.component';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {IFileManagerConfiguration} from './configuration/IFileManagerConfiguration';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfirmationPopoverModule,\n    EffectsModule.forFeature([FileManagerEffectsService]),\n    FormsModule,\n    FileUploadModule,\n    HttpClientModule,\n    ImageCropperModule,\n    ReactiveFormsModule,\n    SimpleNotificationsModule,\n    StoreModule.forFeature('files', fileManagerReducer),\n    TranslateModule,\n    TreeModule\n  ],\n  declarations: [\n    FileManagerComponent,\n    FileComponent,\n    FileTypeFilterComponent,\n    ToolbarComponent,\n    FilesListComponent,\n    DropdownComponent,\n    PreviewComponent,\n    CropComponent,\n    SearchFileComponent,\n    SelectionComponent\n  ],\n  entryComponents: [\n    ImageCropperComponent\n  ],\n  exports: [FileManagerComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FileManagerModule {\n\n  public static forRoot(config: IFileManagerConfiguration, apiProvider: Provider = null): ModuleWithProviders {\n    return {\n      ngModule: FileManagerModule,\n      providers: [\n        CurrentDirectoryFilesService,\n        FileManagerActionsService,\n        FileManagerApiService,\n        FileManagerBackendApiService,\n        FileManagerConfiguration,\n        FileManagerDispatcherService,\n        FileManagerEffectsService,\n        FilemanagerNotifcations,\n        FileManagerUploader,\n        FileTypeFilterService,\n        ImageDataConverter,\n        NotificationsService,\n        SearchFilterService,\n        TreeService,\n        {provide: 'fileManagerConfiguration', useValue: config},\n        apiProvider ? apiProvider : FileManagerApiService\n      ]\n    };\n  }\n\n  public static forChild(config: IFileManagerConfiguration, apiProvider: Provider = null): ModuleWithProviders {\n    return {\n      ngModule: FileManagerModule,\n      providers: [\n        CurrentDirectoryFilesService,\n        FileManagerActionsService,\n        FileManagerApiService,\n        FileManagerBackendApiService,\n        FileManagerConfiguration,\n        FileManagerDispatcherService,\n        FileManagerEffectsService,\n        FilemanagerNotifcations,\n        FileManagerUploader,\n        FileTypeFilterService,\n        ImageDataConverter,\n        NotificationsService,\n        SearchFilterService,\n        TreeService,\n        {provide: 'fileManagerConfiguration', useValue: config},\n        apiProvider ? apiProvider : FileManagerApiService\n      ]\n    };\n  }\n}\n"],"names":["Injectable","Inject","tslib_1.__extends","http","HttpClient","NodeService","store","EventEmitter","ImageCropperComponent","cropperSettings","CropperSettings","Component","ComponentFactoryResolver","Store","Input","Output","ViewChild","ViewContainerRef","UUID","concatMap","of","map","fromEvent","FileUploader","Subject","ViewEncapsulation","empty","throwError","Observable","ofType","switchMap","catchError","TreeActionTypes","filter","Actions","tslib_1.__decorate","Effect","ChangeDetectionStrategy","NotificationsService","HostListener","BehaviorSubject","createFeatureSelector","distinctUntilChanged","withLatestFrom","combineLatest","HttpParams","FormControl","debounceTime","Subscription","NodeDispatcherService","TreeInitializerService","TreeComponent","NgModule","CommonModule","ConfirmationPopoverModule","EffectsModule","FormsModule","FileUploadModule","HttpClientModule","ImageCropperModule","ReactiveFormsModule","SimpleNotificationsModule","StoreModule","TranslateModule","TreeModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}
